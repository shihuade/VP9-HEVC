#!/bin/bash




#usage runGetYUVInfo $TestSequencName
#eg. input: ABC_1920X1080_30fps_XXX.yuv output: 1920 1080 30
#eg. input: ABC_1920X1080_XXX.yuv output: 1920 1080 0
#eg. input: ABC_XXX.yuv output: 0 0 0
runGetYUVInfo()
{
	if [ ! $# -eq 1 ]
	then
		echo "no parameter!"
		return 1
	fi
	
	local SequenceName=$1
	local PicWidth="0"
	local PicHeight="0"
	local FPS="0"

	declare -a aPicInfo
	aPicInfo=(`echo ${SequenceName} | awk 'BEGIN {FS="[_.]"} {for(i=1;i<=NF;i++) printf("%s ",$i)}'`)

	local Iterm
	local Index=""
	local Pattern_01="[xX]"
	local Pattern_02="^[1-9][0-9]"
	local Pattern_03="[1-9][0-9]$"
	local Pattern_04="fps$"

	#get PicW PicH info
	let "Index=0"
	for Iterm in ${aPicInfo[@]}
	do
		if [[ $Iterm =~ $Pattern_01 ]] && [[ $Iterm =~ $Pattern_02 ]] && [[ $Iterm =~ $Pattern_03 ]]
		then
				PicWidth=`echo $Iterm | awk 'BEGIN {FS="[xX]"} {print $1}'`
				PicHeight=`echo $Iterm | awk 'BEGIN {FS="[xX]"} {print $2}'`
				break
		fi
		
		let "Index++"
	done

	#get fps info
	let "Index++"
	if [ $Index -le ${#aPicInfo[@]} ]
	then
		if [[ ${aPicInfo[$Index]} =~ ^[1-9] ]] || [[ ${aPicInfo[$Index]} =~ $Pattern_04 ]]
		then
			FPS=`echo ${aPicInfo[$Index]} | awk 'BEGIN {FS="[a-zA-Z]" } {print $1} '`
		fi
	fi

	echo "$PicWidth $PicHeight $FPS"

}

#usage  runParseYUVName ${YUVPathInfo}
#eg:    input:   runParseYUVName  "../../../YUV/foreman_352x288_30"
#	output:	 foreman_352x288_30
runParseYUVName()
{

	if [ ! $# -eq 1 ]
	then
		echo "not enough parameters!"
		echo "usage: runParseYUVName \${YUVPathInfo}}"
		return 1
	fi
	
	local YUVPathInfo=$1
	local YUVName=""

	YUVName=`echo $YUVPathInfo | awk 'BEGIN {FS="/"} {print $NF}'`
	echo ${YUVName}

}



#usage  runGetPerformanceInfo   ${PerformanceLogFile}
runGetPerformanceInfo_openh264()
{

	if [ ! $# -eq 1 ]
	then
		echo "not enough parameters!"
		echo "usage: runControlBRModTest \${PerformanceLogFile}"
		return 1
	fi

	local PerformanceLogFile=$1

	local PSNRY=""
	local PSNRU=""
	local PSNRV=""
	local BitRate=""
	local FPS=""
	local EncodeTime=""

	while read line
	do 

		if [[ $line =~ "PSNR Y"  ]]
		then
			#SVC: overall PSNR Y: 38.718 U: 42.083 V: 44.385 kb/s: 599.6 fps: 12.000
			PSNRY=`echo $line | awk 'BEGIN {FS="Y:"} {print $2}'` 
			PSNRY=`echo $PSNRY | awk 'BEGIN {FS="U:"} {print $1}'` 

			PSNRU=`echo $line | awk 'BEGIN {FS="U:"} {print $2}'` 
			PSNRU=`echo $PSNRU | awk 'BEGIN {FS="V:"} {print $1}'` 

			PSNRV=`echo $line | awk 'BEGIN {FS="V:"} {print $2}'` 
			PSNRV=`echo $PSNRV | awk 'BEGIN {FS="kb/s:"} {print $1}'`

			BitRate=`echo $line | awk 'BEGIN {FS="kb/s:"} {print $2}'`   # 599.6 fps: 12.000
			BitRate=`echo $BitRate | awk 'BEGIN {FS="fps"} {print $1}'` 

			FPS=`echo $line | awk 'BEGIN {FS="fps:"} {print $2}'` 	
			FPS=`echo $FPS | awk 'BEGIN {FS="\n"} {print $1}'` 
				
		fi

		if [[  $line =~ "encode time"  ]]
		then
			EncodeTime=`echo $line | awk 'BEGIN {FS=":"} {print $2}'` 	
		fi

	done <${PerformanceLogFile}

	echo "${BitRate},${FPS},${PSNRY},${PSNRU},${PSNRV}" 
	      


}



#usage
#runTest_openh264  ${InputYUV} ${OutputFile}   ${TargetBR}   ${LogFile}
runTest_openh264()
{

	if [ ! $# -eq 4 ]
	then
		echo "not enough parameters!"
		echo "usage: runTest_openh264 \${InputYUV} \${OutputFile}  \${TargetBR}   \${LogFile}"
		return 1
	fi
	echo ""
	echo "openh264 encoder....."
	echo ""

	local InputYUV=$1
	local OutputFile=$2
	local TargetBR=$3
	local LogFile=$4

	local PerfINfo=""

	#get YUV detail info $picW $picH $FPS
	local PicW=""
	local PicH=""
	local FPS=""

	local YUVName=`runParseYUVName ${InputYUV}`
	declare -a aYUVInfo
	aYUVInfo=(`runGetYUVInfo ${InputYUV}`)
	PicW=${aYUVInfo[0]}
	PicH=${aYUVInfo[1]}
	FPS=${aYUVInfo[2]}
	
	local EncoderCommand="welsenc.cfg -numl 1 layer2.cfg \
				-bf ${OutputFile}            \
				-org  ${InputYUV}           \
				-sw 0 ${PicW} -sh 0 ${PicH}  \
				-rc 1  -ltarb 0 ${TargetBR}  \
				-frin 0 ${FPS}  -frout 0 ${FPS}"
	
				
	echo "input yuv is ${InputYUV}"
	echo "Target BitRate is ${TargetBR} "
	echo ""
	echo ${EncoderCommand}

	./h264enc ${EncoderCommand} >${LogFile}

	if [ -e ${OutputFile} ]
	then
		rm ${OutputFile}
	fi

}




#usage  runMain_JoinTest
runMain_JoinTest()
{

	echo ""
	echo "JoinTest test....."
	echo ""

	local AllPerformFile="JoinTest-RC-openh264.csv"
	declare -a aTestYUVSet
	declare -a aTargetBitRate
	declare -a aHEVCInfo

	aTargetBitRate=(400 600 800 1000 1200 1400 1600)

	aTestYUVSet=(BQSquare_416x240_60.yuv   \
			BlowingBubbles_416x240_50.yuv      \
			BasketballDrill_832x480_50.yuv     \
			BasketballDrillText_832x480_50.yuv \
		  	foreman_352x288_30                \
		  	src_pic_in_enc_1440x912_DOC.yuv   \
			FourPeople_1280x720_60.yuv	  \
			BQTerrace_1920x1080_60.yuv	  \
			PeopleOnStreet_2560x1600_30_crop.yuv )

	local TestSetPath="/opt/VideoTest/YUV"
	
	local TestYUV=""
	local OutputFile=""
	local TargetBitRate=""
	local Openh264PerforInfo=""
	local LogFile=""

	#inital perfermance file

	echo "YUV,BitRate(kb/s), FPS,PSNRY,PSNRU,PSNRV">>${AllPerformFile}


	for YUV in ${aTestYUVSet[@]}
	do
		for TargetBitRate in ${aTargetBitRate[@]}
		do
			
			LogFile="./LogFile/${YUV}_Target_${TargetBitRate}_openh264.log"
			OutputFile="${YUV}_Target_${TargetBitRate}_openh264.264"
			runTest_openh264   "${TestSetPath}/${YUV}"  ${OutputFile}  ${TargetBitRate}   ${LogFile}

			
			echo ""
			cat ${LogFile}
			echo ""
			Openh264PerforInfo=`runGetPerformanceInfo_openh264   ${LogFile}`

			echo "${Openh264PerforInfo}">>${AllPerformFile}

		done	
		
	done


}



#**************************************************
#call main function

runMain_JoinTest
